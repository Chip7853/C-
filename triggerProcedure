create table inventory_master(order_id number primary key,custid number,orderdate date, amount number);

CREATE TABLE inventory_transaction (
order_id NUMBER REFERENCES inventory_master(order_id),
productid NUMBER,
productname VARCHAR2(20),
quantity NUMBER,
unit_price NUMBER
);


SET SERVEROUTPUT ON;
CREATE OR REPLACE TRIGGER check1
BEFORE INSERT ON inventory_master
FOR EACH ROW
BEGIN
IF :NEW.amount < 0 THEN
RAISE_APPLICATION_ERROR(-20040, 'Invalid amount');
END IF;
END;
/

insert into inventory_master values(&orderid,'&custid','&orderdate',&amount);

create or replace trigger check2 before insert on inventory_transaction for each row
begin
if :new.quantity<0 then
raise_application_error(-20040,'invalid quantity');
end if;
end;
/


_____________________________________________________________________________________________________________________________________________________________

create table tbmark(rno number,name varchar(20),mark1 number,mark2 number(3), mark3 number,avg number(5,2),result varchar(10));

CREATE OR REPLACE PROCEDURE prmarkins (
prno    IN NUMBER,
pname   IN VARCHAR2,
pmark1  IN NUMBER,
pmark2  IN NUMBER,
pmark3  IN NUMBER
)
IS
vtotal   NUMBER;
vaverage NUMBER;
vresult  VARCHAR2(20);
BEGIN
vtotal := pmark1 + pmark2 + pmark3;
vaverage := vtotal / 3;
IF (pmark1 >= 40 AND pmark2 >= 40 AND pmark3 >= 40) THEN
vresult := 'Pass';
ELSE
vresult := 'Fail';
END IF;
INSERT INTO tbmark
VALUES (prno, pname, pmark1, pmark2, pmark3, vaverage, vresult);
END;
/
exec prmarkins(1,'king',89,90,89);

select * from tbmark;


CREATE OR REPLACE PROCEDURE prmarkupdate (
    prno    IN NUMBER,
    pmark1  IN NUMBER,
    pmark2  IN NUMBER,
    pmark3  IN NUMBER
)
IS
    vtotal   NUMBER;
    vaverage NUMBER;
    vresult  VARCHAR2(10);
BEGIN
    vtotal := pmark1 + pmark2 + pmark3;
    vaverage := vtotal / 3;

    IF (pmark1 >= 40 AND pmark2 >= 40 AND pmark3 >= 40) THEN
        vresult := 'Pass';
    ELSE
        vresult := 'Fail';
    END IF;

    UPDATE tbmark
    SET mark1 = pmark1,
        mark2 = pmark2,
        mark3 = pmark3,
        total = vtotal,
        avg = vaverage,
        result = vresult
    WHERE rno = prno;

    DBMS_OUTPUT.PUT_LINE('Record updated successfully!');
END;
/
EXEC prmarkupdate(1, 90, 88, 85);


CREATE OR REPLACE PROCEDURE prmarkdelete (
    prno IN NUMBER
)
IS
BEGIN
    DELETE FROM tbmark
    WHERE rno = prno;

    DBMS_OUTPUT.PUT_LINE('Record deleted successfully!');
END;
/
EXEC prmarkdelete(1);




